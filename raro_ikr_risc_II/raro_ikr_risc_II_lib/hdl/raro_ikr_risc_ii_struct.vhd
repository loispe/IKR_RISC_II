--
-- vhdl architecture raro_ikr_risc_ii_lib.raro_ikr_risc_ii.struct
--
-- created:
--          by - lspetrck.meyer (pc091)
--          at - 15:21:04 07/15/22
--
-- generated by mentor graphics' hdl designer(tm) 2020.2 built on 12 apr 2020 at 11:28:22
--
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
library raro_ikr_risc_ii_lib;
use raro_ikr_risc_ii_lib.internal_types.all;use raro_ikr_risc_ii_lib.isa_types.all;


architecture struct of raro_ikr_risc_ii is

   -- architecture declarations

   -- internal signal declarations
   signal clk               : std_logic;
   signal dbpu_pc           : word;
   signal dbta_valid        : std_logic;
   signal disp              : word;
   signal mux_alu_b         : word;
   signal ralu_in           : word;
   signal ralu_out          : word;
   signal ra_in             : word;
   signal ra_out            : word;
   signal ralumode_in       : alu_mode_type;
   signal ralumode_out      : alu_mode_type;
   signal rb_in             : word;
   signal rb_out            : word;
   signal rc_in             : word;
   signal rc_out            : word;
   signal rdbpu_mode_in     : dbpu_mode_type;
   signal rdbpu_mode_out    : dbpu_mode_type;
   signal rfwd_sela_in_dc   : fwd_mode_type;
   signal rfwd_sela_out_ex  : fwd_mode_type;
   signal rfwd_selb_in_dc   : fwd_mode_type;
   signal rfwd_selb_out_ex  : fwd_mode_type;
   signal rfwd_selc_in_dc   : fwd_mode_type;
   signal rfwd_selc_out_ex  : fwd_mode_type;
   signal rfwd_selsd_in_dc  : fwd_mode_type;
   signal rfwd_selsd_out_ex : fwd_mode_type;
   signal rfwd_selsd_out_me : fwd_mode_type;
   signal rme_in            : word;
   signal rme_out           : word;
   signal rmemmode_in_dc    : mem_mode_type;
   signal rmemmode_out_ex   : mem_mode_type;
   signal rmemmode_out_me   : mem_mode_type;
   signal rnextpc_out_ex    : word;
   signal rnextpc_in_dc     : word;
   signal ropcode_in        : word;
   signal ropcode_out       : word;
   signal rpc_in            : word;
   signal rpc_out           : word;
   signal rsbpu_pc_in       : word;
   signal rsbpu_pc_out      : word;
   signal rstoredata_in     : word;
   signal rstoredata_out    : word;
   signal rtargetreg_in_dc  : reg_addr_type;
   signal rtargetreg_out_ex : reg_addr_type;
   signal rtargetreg_out_me : reg_addr_type;
   signal rtargetreg_out_wb : reg_addr_type;
   signal sbpu_mode         : sbpu_mode_type;
   signal sbta_valid        : std_logic;
   signal sel_alu_pc        : std_logic;
   signal stall_dc          : std_logic;


   -- component declarations
   component dbpu
   port (
      mux_alu_b      : in     word ;
      rdbpu_mode_out : in     dbpu_mode_type ;
      rsbpu_pc_out   : in     word ;
      rstoredata_in  : in     word ;
      dbpu_pc        : out    word ;
      dbta_valid     : out    std_logic ;
      sel_alu_pc     : out    std_logic 
   );
   end component;
   component mux_clock
   port (
      man_clk : in     std_logic ;
      res_n   : in     std_logic ;
      sel_clk : in     std_logic ;
      std_clk : in     std_logic ;
      clk     : out    std_logic 
   );
   end component;
   component mux_init
   port (
      dbpu_pc     : in     word ;
      dbta_valid  : in     std_logic ;
      rpc_out     : in     word ;
      rsbpu_pc_in : in     word ;
      sbta_valid  : in     std_logic ;
      rpc_in      : out    word ;
      survive     : out    word 
   );
   end component;
   component reg_dc_ex
   port (
      clk               : in     std_logic ;
      ra_in             : in     word ;
      ralumode_in       : in     alu_mode_type ;
      rb_in             : in     word ;
      rc_in             : in     word ;
      rdbpu_mode_in     : in     dbpu_mode_type ;
      rfwd_sela_in_dc   : in     fwd_mode_type ;
      rfwd_selb_in_dc   : in     fwd_mode_type ;
      rfwd_selc_in_dc   : in     fwd_mode_type ;
      rfwd_selsd_in_dc  : in     fwd_mode_type ;
      rmemmode_in_dc    : in     mem_mode_type ;
      rnextpc_in_dc     : in     word ;
      rsbpu_pc_in       : in     word ;
      rtargetreg_in_dc  : in     reg_addr_type ;
      res_n             : in     std_logic ;
      ra_out            : out    word ;
      ralumode_out      : out    alu_mode_type ;
      rb_out            : out    word ;
      rc_out            : out    word ;
      rdbpu_mode_out    : out    dbpu_mode_type ;
      rfwd_sela_out_ex  : out    fwd_mode_type ;
      rfwd_selb_out_ex  : out    fwd_mode_type ;
      rfwd_selc_out_ex  : out    fwd_mode_type ;
      rfwd_selsd_out_ex : out    fwd_mode_type ;
      rmemmode_out_ex   : out    mem_mode_type ;
      rnextpc_out_ex    : out    word ;
      rsbpu_pc_out      : out    word ;
      rtargetreg_out_ex : out    reg_addr_type 
   );
   end component;
   component reg_ex_me
   port (
      clk               : in     std_logic ;
      ralu_in           : in     word ;
      rfwd_selsd_out_ex : in     fwd_mode_type ;
      rmemmode_out_ex   : in     mem_mode_type ;
      rstoredata_in     : in     word ;
      rtargetreg_out_ex : in     reg_addr_type ;
      res_n             : in     std_logic ;
      ralu_out          : out    word ;
      rfwd_selsd_out_me : out    fwd_mode_type ;
      rmemmode_out_me   : out    mem_mode_type ;
      rstoredata_out    : out    word ;
      rtargetreg_out_me : out    reg_addr_type 
   );
   end component;
   component reg_if_dc
   port (
      clk           : in     std_logic ;
      ropcode_in    : in     word ;
      rpc_in        : in     word ;
      res_n         : in     std_logic ;
      stall_dc      : in     std_logic ;
      rnextpc_in_dc : out    word ;
      ropcode_out   : out    word 
   );
   end component;
   component reg_me_wb
   port (
      clk               : in     std_logic ;
      rme_in            : in     word ;
      rtargetreg_out_me : in     reg_addr_type ;
      res_n             : in     std_logic ;
      rme_out           : out    word ;
      rtargetreg_out_wb : out    reg_addr_type 
   );
   end component;
   component reg_pc
   port (
      clk      : in     std_logic ;
      rpc_in   : in     word ;
      res_n    : in     std_logic ;
      stall_dc : in     std_logic ;
      rpc_out  : out    word 
   );
   end component;
   component sbpu
   port (
      disp          : in     word ;
      rnextpc_in_dc : in     word ;
      sbpu_mode     : in     sbpu_mode_type ;
      rsbpu_pc_in   : out    word ;
      sbta_valid    : out    std_logic 
   );
   end component;
   component step_dc
   port (
      clk               : in     std_logic ;
      dbta_valid        : in     std_logic ;
      rme_out           : in     word ;
      rmemmode_out_ex   : in     mem_mode_type ;
      ropcode_out       : in     word ;
      rtargetreg_out_ex : in     reg_addr_type ;
      rtargetreg_out_me : in     reg_addr_type ;
      rtargetreg_out_wb : in     reg_addr_type ;
      res_n             : in     std_logic ;
      disp              : out    word ;
      ra_in             : out    word ;
      ralumode_in       : out    alu_mode_type ;
      rb_in             : out    word ;
      rc_in             : out    word ;
      rdbpu_mode_in     : out    dbpu_mode_type ;
      rfwd_sela_in_dc   : out    fwd_mode_type ;
      rfwd_selb_in_dc   : out    fwd_mode_type ;
      rfwd_selc_in_dc   : out    fwd_mode_type ;
      rfwd_selsd_in_dc  : out    fwd_mode_type ;
      rmemmode_in_dc    : out    mem_mode_type ;
      rtargetreg_in_dc  : out    reg_addr_type ;
      sbpu_mode         : out    sbpu_mode_type ;
      stall_dc          : out    std_logic 
   );
   end component;
   component step_ex
   port (
      ralu_out         : in     word ;
      ra_out           : in     word ;
      ralumode_out     : in     alu_mode_type ;
      rb_out           : in     word ;
      rc_out           : in     word ;
      rfwd_sela_out_ex : in     fwd_mode_type ;
      rfwd_selb_out_ex : in     fwd_mode_type ;
      rfwd_selc_out_ex : in     fwd_mode_type ;
      rme_out          : in     word ;
      rnextpc_out_ex   : in     word ;
      sel_alu_pc       : in     std_logic ;
      mux_alu_b        : out    word ;
      ralu_in          : out    word ;
      rstoredata_in    : out    word 
   );
   end component;
   component step_if
   port (
      dbta_valid : in     std_logic ;
      rpc_out    : in     word ;
      sbta_valid : in     std_logic ;
      ropcode_in : out    word 
   );
   end component;
   component step_me
   port (
      clk               : in     std_logic ;
      ralu_in           : in     word ;
      ralu_out          : in     word ;
      rfwd_selsd_out_me : in     fwd_mode_type ;
      rme_out           : in     word ;
      rmemmode_out_me   : in     mem_mode_type ;
      rstoredata_out    : in     word ;
      res_n             : in     std_logic ;
      rme_in            : out    word 
   );
   end component;

   -- optional embedded configurations
   -- pragma synthesis_off
   for all : dbpu use entity raro_ikr_risc_ii_lib.dbpu;
   for all : mux_clock use entity raro_ikr_risc_ii_lib.mux_clock;
   for all : mux_init use entity raro_ikr_risc_ii_lib.mux_init;
   for all : reg_dc_ex use entity raro_ikr_risc_ii_lib.reg_dc_ex;
   for all : reg_ex_me use entity raro_ikr_risc_ii_lib.reg_ex_me;
   for all : reg_if_dc use entity raro_ikr_risc_ii_lib.reg_if_dc;
   for all : reg_me_wb use entity raro_ikr_risc_ii_lib.reg_me_wb;
   for all : reg_pc use entity raro_ikr_risc_ii_lib.reg_pc;
   for all : sbpu use entity raro_ikr_risc_ii_lib.sbpu;
   for all : step_dc use entity raro_ikr_risc_ii_lib.step_dc;
   for all : step_ex use entity raro_ikr_risc_ii_lib.step_ex;
   for all : step_if use entity raro_ikr_risc_ii_lib.step_if;
   for all : step_me use entity raro_ikr_risc_ii_lib.step_me;
   -- pragma synthesis_on


begin

   -- instance port mappings.
   u_10 : dbpu
      port map (
         mux_alu_b      => mux_alu_b,
         rdbpu_mode_out => rdbpu_mode_out,
         rsbpu_pc_out   => rsbpu_pc_out,
         rstoredata_in  => rstoredata_in,
         dbpu_pc        => dbpu_pc,
         dbta_valid     => dbta_valid,
         sel_alu_pc     => sel_alu_pc
      );
   u_12 : mux_clock
      port map (
         man_clk => man_clk,
         res_n   => res_n,
         sel_clk => sel_clk,
         std_clk => std_clk,
         clk     => clk
      );
   u_0 : mux_init
      port map (
         dbpu_pc     => dbpu_pc,
         dbta_valid  => dbta_valid,
         rpc_out     => rpc_out,
         rsbpu_pc_in => rsbpu_pc_in,
         sbta_valid  => sbta_valid,
         rpc_in      => rpc_in,
         survive     => survive
      );
   u_6 : reg_dc_ex
      port map (
         clk               => clk,
         ra_in             => ra_in,
         ralumode_in       => ralumode_in,
         rb_in             => rb_in,
         rc_in             => rc_in,
         rdbpu_mode_in     => rdbpu_mode_in,
         rfwd_sela_in_dc   => rfwd_sela_in_dc,
         rfwd_selb_in_dc   => rfwd_selb_in_dc,
         rfwd_selc_in_dc   => rfwd_selc_in_dc,
         rfwd_selsd_in_dc  => rfwd_selsd_in_dc,
         rmemmode_in_dc    => rmemmode_in_dc,
         rnextpc_in_dc     => rnextpc_in_dc,
         rsbpu_pc_in       => rsbpu_pc_in,
         rtargetreg_in_dc  => rtargetreg_in_dc,
         res_n             => res_n,
         ra_out            => ra_out,
         ralumode_out      => ralumode_out,
         rb_out            => rb_out,
         rc_out            => rc_out,
         rdbpu_mode_out    => rdbpu_mode_out,
         rfwd_sela_out_ex  => rfwd_sela_out_ex,
         rfwd_selb_out_ex  => rfwd_selb_out_ex,
         rfwd_selc_out_ex  => rfwd_selc_out_ex,
         rfwd_selsd_out_ex => rfwd_selsd_out_ex,
         rmemmode_out_ex   => rmemmode_out_ex,
         rnextpc_out_ex    => rnextpc_out_ex,
         rsbpu_pc_out      => rsbpu_pc_out,
         rtargetreg_out_ex => rtargetreg_out_ex
      );
   u_8 : reg_ex_me
      port map (
         clk               => clk,
         ralu_in           => ralu_in,
         rfwd_selsd_out_ex => rfwd_selsd_out_ex,
         rmemmode_out_ex   => rmemmode_out_ex,
         rstoredata_in     => rstoredata_in,
         rtargetreg_out_ex => rtargetreg_out_ex,
         res_n             => res_n,
         ralu_out          => ralu_out,
         rfwd_selsd_out_me => rfwd_selsd_out_me,
         rmemmode_out_me   => rmemmode_out_me,
         rstoredata_out    => rstoredata_out,
         rtargetreg_out_me => rtargetreg_out_me
      );
   u_4 : reg_if_dc
      port map (
         clk           => clk,
         ropcode_in    => ropcode_in,
         rpc_in        => rpc_in,
         res_n         => res_n,
         stall_dc      => stall_dc,
         rnextpc_in_dc => rnextpc_in_dc,
         ropcode_out   => ropcode_out
      );
   u_11 : reg_me_wb
      port map (
         clk               => clk,
         rme_in            => rme_in,
         rtargetreg_out_me => rtargetreg_out_me,
         res_n             => res_n,
         rme_out           => rme_out,
         rtargetreg_out_wb => rtargetreg_out_wb
      );
   u_2 : reg_pc
      port map (
         clk      => clk,
         rpc_in   => rpc_in,
         res_n    => res_n,
         stall_dc => stall_dc,
         rpc_out  => rpc_out
      );
   u_1 : sbpu
      port map (
         disp          => disp,
         rnextpc_in_dc => rnextpc_in_dc,
         sbpu_mode     => sbpu_mode,
         rsbpu_pc_in   => rsbpu_pc_in,
         sbta_valid    => sbta_valid
      );
   u_5 : step_dc
      port map (
         clk               => clk,
         dbta_valid        => dbta_valid,
         rme_out           => rme_out,
         rmemmode_out_ex   => rmemmode_out_ex,
         ropcode_out       => ropcode_out,
         rtargetreg_out_ex => rtargetreg_out_ex,
         rtargetreg_out_me => rtargetreg_out_me,
         rtargetreg_out_wb => rtargetreg_out_wb,
         res_n             => res_n,
         disp              => disp,
         ra_in             => ra_in,
         ralumode_in       => ralumode_in,
         rb_in             => rb_in,
         rc_in             => rc_in,
         rdbpu_mode_in     => rdbpu_mode_in,
         rfwd_sela_in_dc   => rfwd_sela_in_dc,
         rfwd_selb_in_dc   => rfwd_selb_in_dc,
         rfwd_selc_in_dc   => rfwd_selc_in_dc,
         rfwd_selsd_in_dc  => rfwd_selsd_in_dc,
         rmemmode_in_dc    => rmemmode_in_dc,
         rtargetreg_in_dc  => rtargetreg_in_dc,
         sbpu_mode         => sbpu_mode,
         stall_dc          => stall_dc
      );
   u_7 : step_ex
      port map (
         ralu_out         => ralu_out,
         ra_out           => ra_out,
         ralumode_out     => ralumode_out,
         rb_out           => rb_out,
         rc_out           => rc_out,
         rfwd_sela_out_ex => rfwd_sela_out_ex,
         rfwd_selb_out_ex => rfwd_selb_out_ex,
         rfwd_selc_out_ex => rfwd_selc_out_ex,
         rme_out          => rme_out,
         rnextpc_out_ex   => rnextpc_out_ex,
         sel_alu_pc       => sel_alu_pc,
         mux_alu_b        => mux_alu_b,
         ralu_in          => ralu_in,
         rstoredata_in    => rstoredata_in
      );
   u_3 : step_if
      port map (
         dbta_valid => dbta_valid,
         rpc_out    => rpc_out,
         sbta_valid => sbta_valid,
         ropcode_in => ropcode_in
      );
   u_9 : step_me
      port map (
         clk               => clk,
         ralu_in           => ralu_in,
         ralu_out          => ralu_out,
         rfwd_selsd_out_me => rfwd_selsd_out_me,
         rme_out           => rme_out,
         rmemmode_out_me   => rmemmode_out_me,
         rstoredata_out    => rstoredata_out,
         res_n             => res_n,
         rme_in            => rme_in
      );

end struct;
